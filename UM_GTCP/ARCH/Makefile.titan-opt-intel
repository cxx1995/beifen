# Define the following to 1 to enable build

BENCH_GTC_MPI = 1
BENCH_CHARGEI_PTHREADS = 0
BENCH_PUSHI_PTHREADS = 0
BENCH_SERIAL = 0
#SDK_HOME = /ccs/home/beiwang/NVIDIA_GPU_Computing_SDK_4.1.28
CUDA_HOME = /opt/nvidia/cudatoolkit/5.0.35.102
NVCC_HOME = $(CUDA_HOME)

CC = cc
MPICC = cc
NVCC = nvcc

NVCC_FLAGS = -gencode=arch=compute_35,code=\"sm_35,compute_35\" -gencode=arch=compute_35,code=\"sm_35,compute_35\" -m64 -Xptxas -dlcm=cg --compiler-options  -fno-strict-aliasing -I$(NVCC_HOME)/include   -I. -DUNIX -DGPU_ACCEL=1 -DUSE_MPI=1 -I./  -I$(SDK_HOME)/C/common/inc -I$(SDK_HOME)/shared/inc  -I$(NVCC_HOME)/include  
#-I/opt/sw/xk6/ompi/1.7.1/sles11.1_intel12.1.3.293/include
# -maxregcount 128
#--ptxas-options=-v
# -keep -maxregcount 

NVCC_LINK_FLAGS = -fPIC -m64 -L$(NVCC_HOME)/lib64 -L$(SDK_HOME)/shared/lib -L$(SDK_HOME)/C/lib -L$(SDK_HOME)/C/common/lib/linux -lcudart -lstdc++ 

CFLAGS = -DUSE_MPI=1 -DGPU_ACCEL=1 -std=c99 -Wall
CFLAGSOMP = -openmp
COPTFLAGS = -O3
CDEPFLAGS =  -MD
CLDFLAGS = -limf $(NVCC_LINK_FLAGS)
MPIDIR = 
#CFLAGS  +=  -I$(CUDA_HOME)/include/



EXEEXT = _titan_opt_intel
AR = ar
ARCRFLAGS = cr
RANLIB = ranlib
